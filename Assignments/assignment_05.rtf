{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil Consolas;}}
{\colortbl ;\red204\green120\blue50;\red169\green183\blue198;\red255\green198\blue109;\red104\green151\blue187;\red152\green118\blue170;\red106\green135\blue89;}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\b\f0\fs28\lang9 Q1:\par
==>\par

\pard\box\brdrdash\brdrw0 \sa200\sl276\slmult1\cf1\b0\f1\fs30 import \cf2 java.io.*\cf1 ;\line import  \cf2 java.util.*\cf1 ;\line\line class \cf2 vowel1 \cf1 implements  \cf2 Runnable\line  \{\line     \cf1 public  void \cf3 run\cf2 ()\line     \{\line         \cf1 for \cf2 (\cf1 int \cf2 i=\cf4 1\cf1 ; \cf2 i<=\cf4 50\cf1 ; \cf2 i++)\line         \{\line             \cf1 if \cf2 (i%\cf4 2\cf2 ==\cf4 0\cf2 )\line                 System.\cf5\i out\cf2\i0 .println(\cf6 "Even No is :" \cf2 + i)\cf1 ;\line         \cf2\}\line     \}\line\}\line\line\cf1 class  \cf2 vowel \cf1 implements \cf2 Runnable\line\{\line     \cf1 public void \cf3 run\cf2 ()\line     \{\line         \cf1 try\line         \cf2\{\line             BufferedReader BFR = \cf1 new \cf2 BufferedReader(\cf1 new \cf2 InputStreamReader(System.\cf5\i in\cf2\i0 ))\cf1 ;\line             \cf2 System.\cf5\i out\cf2\i0 .println(\cf6 "Enter the String "\cf2 )\cf1 ;\line             \cf2 String data = BFR.readLine()\cf1 ;\line             int \cf2 n1 = data.length()\cf1 ;\line             for \cf2 (\cf1 int \cf2 i =\cf4 0\cf1 ; \cf2 i<n1\cf1 ; \cf2 i++)\line             \{\line                 \cf1 if \cf2 (data .charAt(i)==\cf6 'a'\cf2 || data.charAt(i)==\cf6 'e'\cf2 ||\line                         data.charAt(i)==\cf6 'i'\cf2 || data.charAt(i)==\cf6 'o' \cf2 || data.charAt(i)==\cf6 'u'\cf2 )\line                     System.\cf5\i out\cf2\i0 .println(\cf6 "Vowel in entered String possition " \cf2 + (i+\cf4 1\cf2 )+ \cf6 "is" \cf2 +data.charAt(i))\cf1 ;\line             \cf2\}\line         \}\line         \cf1 catch \cf2 ( Exception Ex)\line         \{\line         \}\line     \}\line\}\line\line\cf1 class  \cf2 vowel2\line\{\line     \cf1 public  static  void \cf3 main\cf2 (String args[])\line     \{\line         \cf1 try\line         \cf2\{\line             vowel1 num =\cf1 new \cf2 vowel1()\cf1 ;\line             \cf2 Thread t1 = \cf1 new \cf2 Thread(num)\cf1 ;\line             \cf2 t1.start()\cf1 ;\line\line             \cf2 vowel cha = \cf1 new \cf2 vowel()\cf1 ;\line             \cf2 Thread t2 = \cf1 new \cf2 Thread(cha)\cf1 ;\line             \cf2 t2.start()\cf1 ;\line         \cf2\}\line         \cf1 catch \cf2 (Exception e)\line         \{\line\line         \}\line     \}\line\}\par

\pard\sa200\sl276\slmult1\cf0\b\f0\fs28\par
\par
\par
Q2: \par

\pard\box\brdrdash\brdrw0 \sa200\sl276\slmult1\cf2\fs30 ==>\b0\line  \par
\cf1\f1 class \cf2 Thread1 \cf1 extends \cf2 Thread\line  \{\line\line    \cf1 public  void \cf3 run\cf2 ()\line    \{\line        \cf1 for \cf2 ( \cf1 int \cf2 i =\cf4 1\cf1 ; \cf2 i<=\cf4 20\cf1 ; \cf2 i++)\line        \{\line            \cf1 try\line            \cf2\{\line                System.\cf5\i out\cf2\i0 .println(\cf6 "Hello"\cf2 )\cf1 ;\line                \cf2 Thread.\i sleep\i0 (\cf4 2000\cf2 )\cf1 ;\line            \cf2\}\line            \cf1 catch \cf2 (InterruptedException ie)\line            \{\line                System.\cf5\i out\cf2\i0 .println(ie)\cf1 ;\line            \cf2\}\line        \}\line    \}\line\line\}\line\cf1 class \cf2 ThreadDemo\line\{\line     \cf1 public static  void  \cf3 main \cf2 (String args[])\line     \{\line         Thread1 t1 = \cf1 new \cf2 Thread1()\cf1 ;\line         \cf2 t1.start()\cf1 ;\line     \cf2\}\line\}\line\b\fs28\par

\pard\sa200\sl276\slmult1\cf0\f0 Q3:\par
==>\par
\par

\pard\box\brdrdash\brdrw0 \sa200\sl276\slmult1\cf1\b0\f1\fs30 import \cf2 java.io.*\cf1 ;\line class \cf2 Fibo \cf1 extends \cf2 Thread\line\{\line     \cf1 public void \cf3 run\cf2 ()\line     \{\line         \cf1 try\line         \cf2\{\line             \cf1 int \cf2 x=\cf4 0\cf1 , \cf2 y=\cf4 1\cf1 , \cf2 z=\cf4 0\cf1 ;\line             \cf2 BufferedReader BFR = \cf1 new \cf2 BufferedReader(\cf1 new \cf2 InputStreamReader(System.\cf5\i in\cf2\i0 ))\cf1 ;\line\line             \cf2 System.\cf5\i out\cf2\i0 .print(\cf6 "Enter the Limit for fabonanci : "\cf2 )\cf1 ;\line\line             int \cf2 num = Integer.\i parseInt\i0 (BFR.readLine())\cf1 ;\line             \cf2 System.\cf5\i out\cf2\i0 .println(\cf6 "\cf1\\n\cf6 -----------------------"\cf2 )\cf1 ;\line             \cf2 System.\cf5\i out\cf2\i0 .println(\cf6 "Fibonacci Series Is:"\cf2 )\cf1 ;\line             while \cf2 (num > \cf4 0\cf2 )\line             \{\line                 System.\cf5\i out\cf2\i0 .print(z + \cf6 " "\cf2 )\cf1 ;\line                 \cf2 x = y\cf1 ;\line                 \cf2 y = z\cf1 ;\line                 \cf2 z = + y\cf1 ;\line                 \cf2 num = num - \cf4 1\cf1 ;\line             \cf2\}\line         \}\line         \cf1 catch \cf2 (Exception Ex)\line         \{\line             Ex.printStackTrace()\cf1 ;\line         \cf2\}\line     \}\line\}\line\cf1 class \cf2 Reverse \cf1 extends \cf2 Thread\line\{\line     \cf1 public void \cf3 run\cf2 ()\line     \{\line         \cf1 try\line         \cf2\{\line             System.\cf5\i out\cf2\i0 .println(\cf6 "\cf1\\n\cf6 -------------------"\cf2 )\cf1 ;\line             \cf2 System.\cf5\i out\cf2\i0 .println(\cf6 "\cf1\\n\cf6 Reverse Number Is: "\cf2 )\cf1 ;\line             \cf2 System.\cf5\i out\cf2\i0 .println(\cf6 "-----------------"\cf2 )\cf1 ;\line             for \cf2 (\cf1 int \cf2 i=\cf4 20\cf1 ; \cf2 i >= \cf4 1 \cf1 ;\cf2 i-- )\line             \{\line                 System.\cf5\i out\cf2\i0 .print(i+\cf6 "  "\cf2 )\cf1 ;\line             \cf2\}\line             System.\cf5\i out\cf2\i0 .println(\cf6 "\cf1\\n\cf6 ---------------\cf1\\n\\n\cf6 "\cf2 )\cf1 ;\line         \cf2\}\line         \cf1 catch \cf2 (Exception Ex)\line         \{\line             Ex.printStackTrace()\cf1 ;\line         \cf2\}\line     \}\line\}\line\line\cf1 public class \cf2 ThreadDemo8 \{\line     \cf1 public static void \cf3 main\cf2 (String[] args)\line     \{\line         \cf1 try\line         \cf2\{\line             Fibo fib = \cf1 new \cf2 Fibo()\cf1 ;\line             \cf2 fib.start()\cf1 ;\line             \cf2 fib.\i sleep\i0 (\cf4 10000\cf2 )\cf1 ;\line             \cf2 Reverse rev = \cf1 new \cf2 Reverse()\cf1 ;\line             \cf2 rev.start()\cf1 ;\line         \cf2\}\line         \cf1 catch \cf2 (Exception Ex)\line         \{\line             Ex.printStackTrace()\cf1 ;\line         \cf2\}\line     \}\line\}\line\line\par

\pard\sa200\sl276\slmult1\cf0\b\f0\fs28 Q4 :\par
==>\par

\pard\box\brdrdash\brdrw0 \sa200\sl276\slmult1\cf1\b0\f1\fs30 class  \cf2 NewThread \cf1 implements  \cf2 Runnable\line\{\line     \cf1 int \cf5 num\cf2 =\cf4 5\cf1 , \cf5 fact\cf2 =\cf4 1\cf1 ;\line     \cf2 Thread \cf5 T\cf1 ;\line     \cf3 NewThread\cf2 ()\line     \{\line         \cf5 T\cf2 =\cf1 new \cf2 Thread (\cf1 this,\cf6 "factorial"\cf2 )\cf1 ;\line         \cf2 System.\cf5\i out\cf2\i0 .println(\cf6 "main Thread " \cf2 + \cf5 T\cf2 )\cf1 ;\line         \cf5 T\cf2 .start()\cf1 ;\line     \cf2\}\line     \cf1 public  void \cf3 run\cf2 ()\line     \{\line         \cf1 try\line         \cf2\{\line             \cf1 while \cf2 (\cf5 num\cf2 >\cf4 0\cf2 )\line             \{\line                 \cf5 fact \cf2 = \cf5 fact \cf2 * \cf5 num\cf1 ;\line                 \cf5 num\cf2 =\cf5 num\cf2 -\cf4 1\cf1 ;\line             \cf2\}\line             System.\cf5\i out\cf2\i0 .println(\cf5 fact\cf2 )\cf1 ;\line             \cf2 Thread.\i sleep\i0 (\cf4 100\cf2 )\cf1 ;\line         \cf2\}\line         \cf1 catch \cf2 (InterruptedException Ex)\line         \{\line             System.\cf5\i out\cf2\i0 .println(\cf6 "Exception"\cf2 )\cf1 ;\line         \cf2\}\line         System.\cf5\i out\cf2\i0 .println(\cf6 "Exiting main Thread "\cf2 )\cf1 ;\line     \cf2\}\line\}\line\cf1 public class \cf2 ThreadDemo7 \{\line     \cf1 public  static  void  \cf3 main \cf2 (String args [])\line     \{\line         \cf1 new \cf2 NewThread()\cf1 ;\line         new \cf2 NewThread1()\cf1 ;\line\line         \cf2 System.\cf5\i out\cf2\i0 .println(\cf6 "Exist Main Thread"\cf2 )\cf1 ;\line     \cf2\}\line\}\line\line\cf1 class  \cf2 NewThread1 \cf1 implements  \cf2 Runnable\line\{\line     Thread  \cf5 T1\cf1 ;\line     \cf3 NewThread1\cf2 ()\line     \{\line         \cf5 T1\cf2 = \cf1 new \cf2 Thread(\cf1 this,\cf6 "Prime Number "\cf2 )\cf1 ;\line         \cf2 System.\cf5\i out\cf2\i0 .println(\cf6 "T1 is created " \cf2 + \cf5 T1\cf2 )\cf1 ;\line         \cf5 T1\cf2 .start()\cf1 ;\line     \cf2\}\line\line\cf1 public  void \cf3 run\cf2 ()\line\{\line     \cf1 int \cf2 i=\cf4 2 \cf1 ,\cf2 num = \cf4 11 \cf1 , \cf2 flag =\cf4 1\cf1 ;\line     try\line     \cf2\{\line         \cf1 int \cf2 num2 = num/\cf4 2\cf1 ;\line         if \cf2 (num2==\cf4 0\cf2 )\line             System.\cf5\i out\cf2\i0 .println(\cf6 " is not a prime number"\cf2 )\cf1 ;\line         else\line             \cf2 System.\cf5\i out\cf2\i0 .println(\cf6 "prime number is : "\cf2 )\cf1 ;\line         \cf2 Thread.\i sleep\i0 (\cf4 1000\cf2 )\cf1 ;\line     \cf2\}\line     \cf1 catch \cf2 (InterruptedException Ex)\line     \{\line         System.\cf5\i out\cf2\i0 .println(\cf6 "Exception "\cf2 )\cf1 ;\line     \cf2\}\line\}\line\}\par

\pard\sa200\sl276\slmult1\cf0\b\f0\fs28\par
}
 